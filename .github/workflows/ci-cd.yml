name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - development
      - main
  push:
    branches:
      - main   # Only deploy on main pushes

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: frontend-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            frontend-

      - name: Install dependencies
        run: npm install

      - name: Run frontend tests (Vitest)
        run: npm run test -- --run

      - name: Build frontend
        run: npm run build

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Cache Pipenv packages
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: backend-${{ hashFiles('server/Pipfile.lock') }}
          restore-keys: |
            backend-

      - name: Install Pipenv
        run: pip install pipenv

      - name: Install backend dependencies
        run: pipenv install --dev --deploy --ignore-pipfile

      - name: Run backend tests
        run: pipenv run pytest

  deploy-frontend:
    needs: [frontend, backend]  # Only runs if both tests pass
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Frontend to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_TOKEN }}

  deploy-backend:
    needs: [frontend, backend]  # Only runs if both tests pass
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Backend to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_TOKEN }}
